plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "io.freefair.lombok" version "5.3.3.3"
}

ext {
    javacppPlatform = 'linux-x86_64' // or any other platform, defaults to Loader.getPlatform()
//    javacppVersion  = '1.5.7'
//    opencvVersion   = "4.5.5"
//    openblasVersion = "0.3.19"
//    depthaiVersion  = "2.14.1"
//    ffmpegVersion   = "5.0"

    javacppVersion  = '1.5.8-SNAPSHOT'
    opencvVersion   = "4.5.5"
    openblasVersion = "0.3.20"
    depthaiVersion  = "2.15.3"
    ffmpegVersion   = "5.0.1"
}

group 'org.example'
version '0.1'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
//    compileOnly("org.projectlombok:lombok")
//    annotationProcessor("org.projectlombok:lombok")
    runtimeOnly("ch.qos.logback:logback-classic:1.2.3")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation("org.bytedeco:depthai-platform:${depthaiVersion}-${javacppVersion}")
    implementation("org.bytedeco:ffmpeg-platform:${ffmpegVersion}-${javacppVersion}") // javacv needs ffmpeg
    implementation("org.bytedeco:opencv-platform:${opencvVersion}-${javacppVersion}")
    implementation("org.bytedeco:javacv:${javacppVersion}")

//    implementation("org.bytedeco:depthai-platform")
//    implementation("org.bytedeco:ffmpeg-platform") // javacv needs ffmpeg
//    implementation("org.bytedeco:opencv-platform")
//    implementation("org.bytedeco:javacv")
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'org.example.Demo'
    }
}